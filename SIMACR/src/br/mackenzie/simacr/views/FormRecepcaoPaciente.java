/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package br.mackenzie.simacr.views;

import br.mackenzie.simacr.controllers.interfaces.IControllerFormRecepcaoPaciente;
import br.mackenzie.simacr.interfaces.IEntidadeComUmaString;
import br.mackenzie.simacr.interfaces.IPaciente;
import java.awt.BorderLayout;
import java.util.ArrayList;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author root
 */
public class FormRecepcaoPaciente extends javax.swing.JFrame {

    IControllerFormRecepcaoPaciente controller;
    DefaultTableModel modelo;

    /**
     * Creates new form FormRecepcaoPaciente
     */
    public FormRecepcaoPaciente(IControllerFormRecepcaoPaciente var) {
        initComponents();
        modelo = (DefaultTableModel) tblPacientes.getModel();
        tblPacientes.removeColumn(tblPacientes.getColumnModel().getColumn(5));
        controller = var;
        carregarCboxRio();
        this.setVisible(true);
        this.startFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblNome = new javax.swing.JLabel();
        lblComunidade = new javax.swing.JLabel();
        lblRio = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        btnPesquisar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPacientes = new javax.swing.JTable();
        btnEnviarTriagem = new javax.swing.JButton();
        cboxComunidade = new javax.swing.JComboBox();
        cboxRio = new javax.swing.JComboBox();
        jMenuBar1 = new javax.swing.JMenuBar();
        itmFechar = new javax.swing.JMenu();
        itmCadastrarPaciente = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Simacr 2.0 - Recepção de Pacientes");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        lblNome.setText("Nome");

        lblComunidade.setText("Comunidade");

        lblRio.setText("Rio");

        btnPesquisar.setText("Pesquisar");
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        tblPacientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Comunidade", "Rio", "DtNascimento", "Telefone", "ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblPacientes.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblPacientes.getTableHeader().setReorderingAllowed(false);
        tblPacientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPacientesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblPacientes);
        tblPacientes.getColumnModel().getColumn(0).setResizable(false);
        tblPacientes.getColumnModel().getColumn(1).setResizable(false);
        tblPacientes.getColumnModel().getColumn(2).setResizable(false);
        tblPacientes.getColumnModel().getColumn(3).setResizable(false);
        tblPacientes.getColumnModel().getColumn(4).setResizable(false);
        tblPacientes.getColumnModel().getColumn(5).setResizable(false);
        tblPacientes.getColumnModel().getColumn(5).setPreferredWidth(5);

        btnEnviarTriagem.setText("Enviar para triagem");
        btnEnviarTriagem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnviarTriagemActionPerformed(evt);
            }
        });

        cboxRio.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboxRioItemStateChanged(evt);
            }
        });

        itmFechar.setText("Voltar");
        itmFechar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                itmFecharMouseClicked(evt);
            }
        });
        itmFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmFecharActionPerformed(evt);
            }
        });
        jMenuBar1.add(itmFechar);

        itmCadastrarPaciente.setText("CadastrarPaciente");
        itmCadastrarPaciente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                itmCadastrarPacienteMouseClicked(evt);
            }
        });
        jMenuBar1.add(itmCadastrarPaciente);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblNome)
                                    .addComponent(lblRio))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(cboxRio, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(lblComunidade)
                                        .addGap(18, 18, 18)
                                        .addComponent(cboxComunidade, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(txtNome))
                                .addGap(18, 18, 18)
                                .addComponent(btnPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(300, 300, 300)
                        .addComponent(btnEnviarTriagem, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNome)
                            .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblRio)
                            .addComponent(cboxRio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblComunidade)
                            .addComponent(cboxComunidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnEnviarTriagem, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void startFocus() {
        txtNome.requestFocus();
    }

    private void tblPacientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPacientesMouseClicked
        if (evt.getClickCount() > 1) {
            JTable target = (JTable) evt.getSource();
            controller.abrirFormCadastroPaciente((Long) modelo.getValueAt(target.getSelectedRow(), 5));
            limparTabela();
        }
    }//GEN-LAST:event_tblPacientesMouseClicked

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        limparTabela();
        ArrayList<IPaciente> lista = controller.buscarPacientes(txtNome.getText(), String.valueOf(cboxComunidade.getSelectedItem()), String.valueOf(cboxRio.getSelectedItem()));
        for (IPaciente pac : lista) {
            modelo.insertRow(modelo.getRowCount(), new Object[]{pac.getNome(), pac.getComunidade(), pac.getRio(), pac.getDataNascimento(), pac.getTelefone(), pac.getId()});
        }
    }//GEN-LAST:event_btnPesquisarActionPerformed

    private void itmFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmFecharActionPerformed
    }//GEN-LAST:event_itmFecharActionPerformed

    private void btnEnviarTriagemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnviarTriagemActionPerformed
        if (tblPacientes.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "Selecionar um paciente");
        } else {
            controller.enviarTriagem((Long) modelo.getValueAt(tblPacientes.getSelectedRow(), 5));
            limparTabela();
        }
    }//GEN-LAST:event_btnEnviarTriagemActionPerformed

    private void itmFecharMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itmFecharMouseClicked
        controller.cancelar();
    }//GEN-LAST:event_itmFecharMouseClicked

    private void itmCadastrarPacienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itmCadastrarPacienteMouseClicked
        controller.abrirFormCadastroPaciente();
    }//GEN-LAST:event_itmCadastrarPacienteMouseClicked

    private void cboxRioItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboxRioItemStateChanged
        if (cboxRio.getSelectedIndex() < 1) {
            limparCboxComunidade();
            cboxComunidade.setEnabled(false);
        } else {
            carregarCboxComunidade();
            cboxComunidade.setEnabled(true);
        }

    }//GEN-LAST:event_cboxRioItemStateChanged

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        controller.cancelar();
    }//GEN-LAST:event_formWindowClosing

    private void limparTabela() {
        while (modelo.getRowCount() > 0) {
            modelo.removeRow(0);
        }
    }

    public void carregarCboxRio() {
        cboxRio.removeAllItems();
        cboxRio.addItem("");
        for (IEntidadeComUmaString it : controller.getRios()) {
            cboxRio.addItem(it.getNome());
        }
    }

    public void limparCboxComunidade() {
        cboxComunidade.removeAllItems();
        cboxComunidade.addItem("");
    }

    public void carregarCboxComunidade() {
        limparCboxComunidade();
        String nomeRio = String.valueOf(cboxRio.getSelectedItem());
        if (!nomeRio.equals("")) {
            for (IEntidadeComUmaString it : controller.getComunidades(nomeRio)) {
                cboxComunidade.addItem(it.getNome());
            }
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEnviarTriagem;
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JComboBox cboxComunidade;
    private javax.swing.JComboBox cboxRio;
    private javax.swing.JMenu itmCadastrarPaciente;
    private javax.swing.JMenu itmFechar;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblComunidade;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblRio;
    private javax.swing.JTable tblPacientes;
    private javax.swing.JTextField txtNome;
    // End of variables declaration//GEN-END:variables
}
