/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package br.mackenzie.simacr.views;

import br.mackenzie.simacr.controllers.interfaces.IControllerFormTriagem;
import br.mackenzie.simacr.interfaces.IPaciente;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author root
 */
public class FormTriagem extends javax.swing.JFrame {

    IControllerFormTriagem controller;
    boolean chk1, chk2;

    /**
     * Creates new form FormTriagem
     */
    public FormTriagem(IControllerFormTriagem varController, IPaciente varPac) {
        initComponents();
        controller = varController;
        txtNome.setText(varPac.getNome());
        chk1 = false;
        chk2 = false;
        this.setVisible(true);
        this.startFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblNome = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        lblPeso = new javax.swing.JLabel();
        txtPeso = new javax.swing.JTextField();
        lblAltura = new javax.swing.JLabel();
        txtAltura = new javax.swing.JTextField();
        lblPressao = new javax.swing.JLabel();
        txtPressao = new javax.swing.JTextField();
        lblTemperatura = new javax.swing.JLabel();
        txtTemperatura = new javax.swing.JTextField();
        lblSintoma = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtSintoma = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        txtDiametro = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtIMC = new javax.swing.JTextField();
        chkCMedica = new javax.swing.JCheckBox();
        lblConsulta = new javax.swing.JLabel();
        chkCOdontologica = new javax.swing.JCheckBox();
        chkNenhum = new javax.swing.JCheckBox();
        jMenuBar1 = new javax.swing.JMenuBar();
        itmVoltar = new javax.swing.JMenu();
        itmFinalizar = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Simacr 2.0 - Triagem");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        lblNome.setText("Nome:");

        txtNome.setEditable(false);
        txtNome.setEnabled(false);

        lblPeso.setText("Peso:");

        txtPeso.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPesoFocusLost(evt);
            }
        });

        lblAltura.setText("Altura:");

        txtAltura.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtAlturaFocusLost(evt);
            }
        });

        lblPressao.setText("Press√£o:");

        lblTemperatura.setText("Temperatura:");

        txtTemperatura.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTemperaturaFocusLost(evt);
            }
        });

        lblSintoma.setText("Sintoma principal(O que o paciente diz):");

        txtSintoma.setColumns(20);
        txtSintoma.setRows(5);
        jScrollPane1.setViewportView(txtSintoma);

        jLabel1.setText("Diametro da Cintura");

        txtDiametro.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDiametroFocusLost(evt);
            }
        });

        jLabel2.setText("IMC:");

        txtIMC.setEditable(false);
        txtIMC.setEnabled(false);

        chkCMedica.setText("Medica");
        chkCMedica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkCMedicaActionPerformed(evt);
            }
        });

        lblConsulta.setText("Consulta:");

        chkCOdontologica.setText("Odontologica");
        chkCOdontologica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkCOdontologicaActionPerformed(evt);
            }
        });

        chkNenhum.setText("Nenhuma Consulta");
        chkNenhum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkNenhumActionPerformed(evt);
            }
        });

        itmVoltar.setText("Voltar");
        itmVoltar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                itmVoltarMouseClicked(evt);
            }
        });
        jMenuBar1.add(itmVoltar);

        itmFinalizar.setText("Finalizar Triagem");
        itmFinalizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                itmFinalizarMouseClicked(evt);
            }
        });
        jMenuBar1.add(itmFinalizar);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblSintoma)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(chkCMedica)
                                .addGap(18, 18, 18)
                                .addComponent(chkCOdontologica)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(chkNenhum))
                            .addComponent(lblConsulta))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblPeso)
                                            .addComponent(txtPeso, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lblAltura)
                                                .addGap(65, 65, 65)
                                                .addComponent(jLabel2))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(txtAltura, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(txtIMC, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addComponent(lblNome)
                                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel1)
                                            .addComponent(txtDiametro, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtPressao, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblPressao))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtTemperatura, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblTemperatura)))))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblNome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDiametro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPeso)
                            .addComponent(lblAltura)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPeso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAltura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtIMC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(27, 27, 27)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtPressao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtTemperatura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPressao)
                            .addComponent(lblTemperatura))))
                .addGap(18, 18, 18)
                .addComponent(lblConsulta)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkCMedica)
                    .addComponent(chkCOdontologica)
                    .addComponent(chkNenhum))
                .addGap(18, 18, 18)
                .addComponent(lblSintoma)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void startFocus() {
        txtDiametro.requestFocus();
    }

    private void itmVoltarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itmVoltarMouseClicked
        controller.cancelar();
    }//GEN-LAST:event_itmVoltarMouseClicked

    private void itmFinalizarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itmFinalizarMouseClicked
        try {
            Double.parseDouble(txtDiametro.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Diametro de Cintura inv√°lido");
            return;
        }
        try {
            Double.parseDouble(txtPeso.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Peso inv√°lido");
            return;
        }
        try {
            Double.parseDouble(txtAltura.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Altura inv√°lida");
            return;
        }
        try {
            Double.parseDouble(txtIMC.getText());
        } catch (NumberFormatException e) {
            trocarChar(txtIMC);
        }
        if (txtPressao.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Press√£o inv√°lida");
            return;
        }
        try {
            Double.parseDouble(txtTemperatura.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Temperatura inv√°lida");
            return;
        }
        if (chkCMedica.isSelected() == false && chkCOdontologica.isSelected() == false && chkNenhum.isSelected() == false) {
            JOptionPane.showMessageDialog(this, "Selecione pelo menos uma op√ß√£o de consulta");
            return;
        } else {
            controller.salvarTriagem(Double.valueOf(txtAltura.getText()), Double.valueOf(txtDiametro.getText()), Double.valueOf(txtIMC.getText()), Double.valueOf(txtPeso.getText()), txtPressao.getText(), txtSintoma.getText(), Double.valueOf(txtTemperatura.getText()), chkCMedica.isSelected(), chkCOdontologica.isSelected());
        }

    }//GEN-LAST:event_itmFinalizarMouseClicked

    private void txtDiametroFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDiametroFocusLost
        trocarChar(txtDiametro);
    }//GEN-LAST:event_txtDiametroFocusLost

    private void txtPesoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPesoFocusLost
        trocarChar(txtPeso);
        calculoIMC();
    }//GEN-LAST:event_txtPesoFocusLost

    private void txtAlturaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAlturaFocusLost
        trocarChar(txtAltura);
        calculoIMC();
    }//GEN-LAST:event_txtAlturaFocusLost

    private void calculoIMC() {
        try {
            Double.valueOf(txtPeso.getText());
            Double.valueOf(txtAltura.getText());
            txtIMC.setText(String.format("%.1f", (Double.valueOf(txtPeso.getText())) / (Math.pow(Double.valueOf(txtAltura.getText()), 2))));
        } catch (NumberFormatException e) {
            txtIMC.setText("????");
        }
    }

    private void txtTemperaturaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTemperaturaFocusLost
        trocarChar(txtTemperatura);
    }//GEN-LAST:event_txtTemperaturaFocusLost

    private void chkNenhumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkNenhumActionPerformed
        if (chkNenhum.isSelected()) {
            chkCMedica.setSelected(false);
            chkCOdontologica.setSelected(false);
            chkCMedica.setEnabled(false);
            chkCOdontologica.setEnabled(false);
        } else {
            chkCMedica.setSelected(chk1);
            chkCOdontologica.setSelected(chk2);
            chkCMedica.setEnabled(true);
            chkCOdontologica.setEnabled(true);
        }

    }//GEN-LAST:event_chkNenhumActionPerformed

    private void chkCMedicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkCMedicaActionPerformed
        chk1 = chkCMedica.isSelected();
    }//GEN-LAST:event_chkCMedicaActionPerformed

    private void chkCOdontologicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkCOdontologicaActionPerformed
        chk2 = chkCOdontologica.isSelected();
    }//GEN-LAST:event_chkCOdontologicaActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        controller.cancelar();
    }//GEN-LAST:event_formWindowClosing

    private void trocarChar(JTextField varTF) {
        varTF.setText(varTF.getText().replace(',', '.'));
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox chkCMedica;
    private javax.swing.JCheckBox chkCOdontologica;
    private javax.swing.JCheckBox chkNenhum;
    private javax.swing.JMenu itmFinalizar;
    private javax.swing.JMenu itmVoltar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAltura;
    private javax.swing.JLabel lblConsulta;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblPeso;
    private javax.swing.JLabel lblPressao;
    private javax.swing.JLabel lblSintoma;
    private javax.swing.JLabel lblTemperatura;
    private javax.swing.JTextField txtAltura;
    private javax.swing.JTextField txtDiametro;
    private javax.swing.JTextField txtIMC;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtPeso;
    private javax.swing.JTextField txtPressao;
    private javax.swing.JTextArea txtSintoma;
    private javax.swing.JTextField txtTemperatura;
    // End of variables declaration//GEN-END:variables
}
